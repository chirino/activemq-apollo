-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-# 
-# http://www.apache.org/licenses/LICENSE-2.0
-# 
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.

- import it._
- val helper = new org.apache.activemq.apollo.web.resources.ViewHelper
- import helper._

.breadcumbs
  a(href={strip_resolve("..")}) Back

h1 Topic: #{id}

p state: #{state} #{ uptime(state_since) } ago
h3 Topic Domain

h4 Enqueue/Deqeueue Counters

p enqueued: #{metrics.enqueue_item_counter} messages (#{memory(metrics.enqueue_size_counter)}), #{uptime(metrics.enqueue_ts)} ago

p dequeued: #{metrics.dequeue_item_counter} messages (#{memory(metrics.dequeue_size_counter)}), #{uptime(metrics.dequeue_ts)} ago

h4 Producers
p total producers ever : #{metrics.producer_counter}
ul
  - for( x <- producers )
    li.producer
      - x.kind match
        - case "queue" =>
          a(href={ path("../../queues/"+x.id) }) #{x.label}
        - case "connection" =>
          a(href={ path("../../../../connections/"+x.id) }) #{x.label}
        - case _ =>
      p dispatched: #{x.enqueue_item_counter} messages (#{memory(x.enqueue_size_counter)}), #{uptime(x.enqueue_ts)} ago

h4 Consumers
p total consumers ever : #{metrics.consumer_counter}
ul
  - for( x <- consumers )
    li.consumer
      - x.kind match
        - case "topic-queue" =>
          a(href={ path("../../topic-queues/"+id+"/"+x.id) }) #{x.label}
        - case "queue" =>
          a(href={ path("../../queues/"+x.id) }) #{x.label}
        - case "connection" =>
          a(href={ path("../../../../connections/"+x.id) }) #{x.label}
        - case _ =>
      p dispatched: #{x.enqueue_item_counter} messages (#{memory(x.enqueue_size_counter)}), #{uptime(x.enqueue_ts)} ago

h4 Durable Subscribers
ul
  - for( x <- dsubs )
    li
      a(href={ path("../../dsubs/"+x) }) #{x}
